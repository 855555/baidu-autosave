name: Auto Docker Build and Release

on:
  push:
    branches: [ main, master ]
    paths:
      - 'static/main.js'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/baidu-autosave

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Extract version from main.js
        id: get-version
        run: |
          VERSION=$(grep -m 1 "APP_VERSION = " static/main.js | sed -E "s/.*APP_VERSION = '(.*)'.*/\1/")
          echo "Version from main.js: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Check if version changed
        id: check-version
        run: |
          git fetch origin
          PREVIOUS_VERSION=$(git show HEAD~1:static/main.js | grep -m 1 "APP_VERSION = " | sed -E "s/.*APP_VERSION = '(.*)'.*/\1/")
          CURRENT_VERSION=$(grep -m 1 "APP_VERSION = " static/main.js | sed -E "s/.*APP_VERSION = '(.*)'.*/\1/")
          echo "Previous version: $PREVIOUS_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "No version change detected"
            echo "should_build=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: steps.check-version.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: steps.check-version.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Docker tags
        if: steps.check-version.outputs.should_build == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest

      - name: Build and push Docker image
        if: steps.check-version.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Create Release
        if: steps.check-version.outputs.should_build == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }} 